datasource db {
  provider = "postgresql"

  url = env("POSTGRES_PRISMA_URL") // uses connection pooling

  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection

  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.
// TODO: Please remove the following example:
model User {
  id                  Int       @id @default(autoincrement())
  name                String?
  email               String    @unique
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  comments            Comment[]
  roles               String    @default("client")
  Imaeg               String?
}

model Post {
  id         Int       @id @default(autoincrement())
  title      String
  body       String
  createdAt  DateTime  @default(now())
  likeAmount Int       @default(0)
  Image      String?
  Comment    Comment[]
}

model NicolaPost {
  id         Int      @id @default(autoincrement())
  title      String
  body       String
  createdAt  DateTime @default(now())
  likeAmount Int      @default(0)
  Image      String?
}

model ProjectData {
  id            Int      @id @default(autoincrement())
  title         String
  category      String
  createdAt     DateTime @default(now())
  image         String
  video         String
  clientName    String
  clientWebsite String
  objective     String
  tools         String
  body          String
  by            String
}

model Comment {
  id        Int      @id @default(autoincrement())
  name      String
  body      String
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  createdAt DateTime @default(now())
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?
}
