{"version":3,"file":"ProjectDataProjectDataPage.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA;AAAA;AANA;AACA;AACA;AAEA;AAEA;AAQA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AARA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAqDA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAOA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7GA;AAAA;AAFA;AAEA;AAmBA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAEA","sources":["webpack://web/./src/components/ProjectData/ProjectData/ProjectData.js","webpack://web/./src/components/ProjectData/ProjectDataCell/ProjectDataCell.js","webpack://web/./src/pages/ProjectData/ProjectDataPage/ProjectDataPage.js"],"sourcesContent":["import { Link, routes, navigate } from '@redwoodjs/router'\nimport { useMutation } from '@redwoodjs/web'\nimport { toast } from '@redwoodjs/web/toast'\n\nimport { timeTag } from 'src/lib/formatters'\n\nconst DELETE_PROJECT_DATA_MUTATION = gql`\n  mutation DeleteProjectDataMutation($id: Int!) {\n    deleteProjectData(id: $id) {\n      id\n    }\n  }\n`\n\nconst ProjectData = ({ projectData }) => {\n  const [deleteProjectData] = useMutation(DELETE_PROJECT_DATA_MUTATION, {\n    onCompleted: () => {\n      toast.success('ProjectData deleted')\n      navigate(routes.projectDatas())\n    },\n    onError: (error) => {\n      toast.error(error.message)\n    },\n  })\n\n  const onDeleteClick = (id) => {\n    if (confirm('Are you sure you want to delete projectData ' + id + '?')) {\n      deleteProjectData({ variables: { id } })\n    }\n  }\n\n  return (\n    <>\n      <div className=\"rw-segment\">\n        <header className=\"rw-segment-header\">\n          <h2 className=\"rw-heading rw-heading-secondary\">\n            ProjectData {projectData.id} Detail\n          </h2>\n        </header>\n        <table className=\"rw-table\">\n          <tbody>\n            <tr>\n              <th>Id</th>\n              <td>{projectData.id}</td>\n            </tr>\n            <tr>\n              <th>Title</th>\n              <td>{projectData.title}</td>\n            </tr>\n            <tr>\n              <th>Category</th>\n              <td>{projectData.category}</td>\n            </tr>\n            <tr>\n              <th>Created at</th>\n              <td>{timeTag(projectData.createdAt)}</td>\n            </tr>\n            <tr>\n              <th>Image</th>\n              <td>{projectData.image}</td>\n            </tr>\n            <tr>\n              <th>Video</th>\n              <td>{projectData.video}</td>\n            </tr>\n            <tr>\n              <th>Client name</th>\n              <td>{projectData.clientName}</td>\n            </tr>\n            <tr>\n              <th>Client website</th>\n              <td>{projectData.clientWebsite}</td>\n            </tr>\n            <tr>\n              <th>Objective</th>\n              <td>{projectData.objective}</td>\n            </tr>\n            <tr>\n              <th>Tools</th>\n              <td>{projectData.tools}</td>\n            </tr>\n            <tr>\n              <th>Body</th>\n              <td>{projectData.body}</td>\n            </tr>\n            <tr>\n              <th>By</th>\n              <td>{projectData.by}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <nav className=\"rw-button-group\">\n        <Link\n          to={routes.editProjectData({ id: projectData.id })}\n          className=\"rw-button rw-button-blue\"\n        >\n          Edit\n        </Link>\n        <button\n          type=\"button\"\n          className=\"rw-button rw-button-red\"\n          onClick={() => onDeleteClick(projectData.id)}\n        >\n          Delete\n        </button>\n      </nav>\n    </>\n  )\n}\n\nexport default ProjectData\n","import ProjectData from 'src/components/ProjectData/ProjectData'\n\nexport const QUERY = gql`\n  query FindProjectDataById($id: Int!) {\n    projectData: projectData(id: $id) {\n      id\n      title\n      category\n      createdAt\n      image\n      video\n      clientName\n      clientWebsite\n      objective\n      tools\n      body\n      by\n    }\n  }\n`\n\nexport const Loading = () => <div>Loading...</div>\n\nexport const Empty = () => <div>ProjectData not found</div>\n\nexport const Failure = ({ error }) => (\n  <div className=\"rw-cell-error\">{error?.message}</div>\n)\n\nexport const Success = ({ projectData }) => {\n  return <ProjectData projectData={projectData} />\n}\n","import ProjectDataCell from 'src/components/ProjectData/ProjectDataCell'\n\nconst ProjectDataPage = ({ id }) => {\n  return <ProjectDataCell id={id} />\n}\n\nexport default ProjectDataPage\n"],"names":[],"sourceRoot":""}